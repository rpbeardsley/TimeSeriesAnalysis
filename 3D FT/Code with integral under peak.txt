%Plot the FTs as a function of time
%
%
%Input information
%
%Files should be labled as the stage position at which the FT represents
% method for evenly spaced stage positions
numFirstFile = 300;
numLastFile = 450;
numWinStep = 6;     %window increment
ppstep = 0.9;       %pump-probe step position (mm)
MinPeak = 96;       %min peak value for integration
MaxPeak = 136;       %max peak value for integration
%method for random stage positions
%create a vector with the file names in it
%inputfiles = [];

FirstFile = num2str(numFirstFile);
LastFile = num2str(numLastFile);
WinStep = int2str(intWinStep);

DirName = 'DIRECTORY_HERE\';
%
%end input information

fname = [DirName, FirstFile, 'mm.dat'];

%take the Y (frequency) data and see how many rows there are
M = importdata(fname, '\t');
Y = M;
Y(:,2) = [];
NumRow = size(Y, 1);
%other input method--------
%fid = fopen(fname, 'r');
%data = textscan(fid, '%f %f','headerlines', 0);
%X = data{1}
%Y = data{2}
%status = fclose(fid);
%end other input method-----

%create the matrix for the X (time) data and for the Z (height) data to be
%wrtiten to
X = numFirstFile:numWinStep:numLastFile;
columns = size(X, 2);
Z = zeros(NumRow, columns);

%setup the loop that will add the vectorised Z data in
numFile = numFirstFile;
counter = 1;
%add in the Z data to the Z matrix
for counter = 1:columns
    File = num2str(numFile);
    fname = [DirName, File, 'mm.dat'];
    M = importdata(fname, '\t');
    M(:,1) = [];
    numFile = numFile + numWinStep;
    Z(:,counter) = Z(:,counter) + M;
    counter = counter + 1;
end

Yb = Y;
Xb = X;
Zb = Z;

%resize the arrays to show the region of interest
Y(1:65,:) = [];
Y(650:end,:) = [];
Z(1:65,:) = [];
Z(650:end,:) = [];

%Change the mm delay into ps
X(:,:) = (X(:,:) - ppstep)*6.6666666;

Z(:,:) = sqrt(Z(:,:));

%make a surface plot
figure
F = surf(X,Y,Z);
shading interp;
xlabel('Time delay (ps)');
ylabel('Frequency (GHz)');
zlabel('Z (arb. units)');

%Integrate under the peak in the FT and put the values in a vector
Xb(:,:) = (Xb(:,:) - ppstep)*6.6666666;

Zb(:,:) = sqrt(Zb(:,:));

Intg = zeros(columns,1);

for c = 1:columns;
    J = sum(Zb(MinPeak:MaxPeak, c));
    Intg(c,:) = Intg(c,:) + J;
    c = c + 1;
end;

%Plot the integrated values against time
figure;
plot(Xb, Intg, '-');
title('Integral under peak against time');
xlabel('Time (ps)');
ylabel('Integral (arb. units)');

%output the data to a file
Outfname = [DirName, 'Integrated Peak.dat'];
fid = fopen(Outfname, 'w'); 
i = 1;
for i = 1:columns
    fprintf(fid, '%d\t', X(1,i));
    fprintf(fid, '%E\n', Intg(i,1));
    i = i + 1;
end
fprintf(fid, '/et    x "Time (ps)"     ;axis title');
fprintf(fid, '\n');
fprintf(fid, '/et    y "Integrated Peak (arb. units)"        ;axis title');